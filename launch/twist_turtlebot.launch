<launch>
    <!-- Modules ON/OFF flags -->
    <arg name="rviz" default="false"/>
    <arg name="slam" default="false"/>
    <arg name="navigation" default="true"/>
    <arg name="webserver" default="true"/>
    <arg name="location_house" default="false"/>

    <!-- Arguments -->
    <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
    <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="world" default="empty"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="x_pos" default="1"/>
    <arg name="y_pos" default="-0.286"/>
    <arg name="z_pos" default="0.0"/>
    <arg name="move_forward_only" default="false"/>

    <group if="$(arg location_house)">
        <!-- Gazebo world configuration -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="paused" value="$(arg paused)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="gui" value="$(arg gui)"/>
            <arg name="headless" value="$(arg headless)"/>
            <arg name="debug" value="$(arg debug)"/>
            <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/>
        </include>
    </group>

    <group unless="$(arg location_house)">
        <!-- Gazebo world configuration -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="paused" value="$(arg paused)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="gui" value="$(arg gui)"/>
            <arg name="headless" value="$(arg headless)"/>
            <arg name="debug" value="$(arg debug)"/>
            <arg name="world_name" value="$(find twist)/worlds/office.world"/>
        </include>
    </group>

    <!-- Model description -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <!-- Gazebo spawn -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

    <!-- TurtleBot bringup -->
    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
      <arg name="model" value="$(arg model)" />
    </include>

    <!-- If SLAM enabled - make sure to launch teleop for remote control to be able to get the SLAM data -->
    <!-- Map saver - once the teleop is finished launch >> rosrun map_server map_saver -f ~/map -->
    <group if="$(arg slam)">
        <group unless="$(arg navigation)">
            <!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->
            <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
                <arg name="model" value="$(arg model)"/>
                <arg name="configuration_basename" value="$(arg configuration_basename)"/>
            </include>
        </group>
    </group>

    <!-- If navigation enabled -->
    <group if="$(arg navigation)">
        <!-- Map server -->
        <group if="$(arg location_house)">
            <node pkg="map_server" name="map_server" type="map_server" args="$(find twist)/maps/house_map.yaml"/>
        </group>
        <group unless="$(arg location_house)">
            <node pkg="map_server" name="map_server" type="map_server" args="$(find twist)/maps/office_map.yaml"/>
        </group>

        <!-- AMCL -->
        <include file="$(find turtlebot3_navigation)/launch/amcl.launch"/>

        <!-- move_base -->
        <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
            <arg name="model" value="$(arg model)" />
            <arg name="move_forward_only" value="$(arg move_forward_only)"/>
        </include>
    </group>

    <!-- If RVIZ enabled -->
    <group if="$(arg rviz)">
        <!-- RVIZ visualization -->
      <node pkg="rviz" type="rviz" name="rviz" required="true"
            args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
    </group>

    <!-- If webserver enabled -->
    <group if="$(arg webserver)">
        <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" />
    </group> -->

    <!-- TWIST node bring-up -->
    <node pkg="twist" type="Application" required="true" output="screen" name="twist"></node>
</launch>

